pub fn float __builtin_sqrtf(float x) intrinsic "llvm.sqrt" float;

fn fvec3 vadd(fvec3 a, fvec3 b) {
    a + b
}

fn fvec3 vscale(fvec3 a, float b) {
    a * b
}

fn float vdot(fvec3 a, fvec3 b) {
    let mult = a * b;
    mult.x + mult.y + mult.z
}

fn fvec3 vcross(fvec3 a, fvec3 b) {
    let x = a.y * b.z - a.z * b.y;
    let y = a.z * b.x - a.x * b.z;
    let z = a.x * b.y - a.y * b.x;
    <x, y, z>
}

impure fn fvec3 vnorm(fvec3 v) {
    let denom = 1.0 / __builtin_sqrtf(vdot(v, v));
    v * denom
}
