
type Keyword = enum {
    Pub,
    Fn,
    Mut,
    If,
    Else,
    Let,
    For,
    While,
    Break,
    Continue,
    Match,
    As,
    Neg,
    Iter,
    Ref,
    Store,
    Load,
    Return,
    Struct,
    Type,
    Nil,
    Defer,
    Impure,
    Enum,
    Import,
    Union,
    Sizeof,
    Box,
    Unbox,
    Intrinsic,
    Until,
};

type MatrixDimension = struct {
    i64 rows;
    i64 cols;
};

type Token = enum {
    Identifier(str),
    Integer(i64),
    Float(f64),
    String(str),
    Char(i8),
    Plus,
    Minus,
    Asterisk,
    FSlash,
    Percent,
    Increment,
    Decrement,
    Assign,
    LParen,
    RParen,
    LBrace,
    RBrace,
    Semi,
    Equals,
    Or,
    And,
    Not,
    LessThan,
    LessThanEqual,
    GreaterThan,
    GreaterThanEqual,
    NotEqual,
    BitwiseOr,
    BitwiseAnd,
    BitwiseXor,
    Comma,
    Quote,
    Apostrophe,
    Colon,
    Period,
    Into,
    LBracket,
    RBracket,
    Tilde,
    DotDot,
    LShift,
    RShift,
    Pound,
    Under,
    ColonColon,
    CommentLong,
    CommentLine,
    Newline,
    DashGreaterThan,
    Keyword(Keyword),

    TySigned(i64),
    TyUnsigned(i64),
    TyFloat,
    TyFVec(i64),
    TyString,
    TyChar,
    TyVoid,
    TyMat(MatrixDimension),
};
